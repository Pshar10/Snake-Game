name: Build, Scan, and Deploy to GitHub Pages

on:
  push:
    branches:
      - main  
  pull_request:
    branches:
      - main  
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 21

      - name: Install Trivy for security scanning
        run: |
          wget -qO- https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo "deb https://aquasecurity.github.io/trivy-repo/deb focal main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install -y trivy

      - name: Scan for vulnerabilities using Trivy
        run: |
          mkdir -p security-reports
          # Replace './' with the folder you want to scan (e.g., 'src', 'Dockerfiles', etc.)
          trivy fs --exit-code 1 --severity HIGH,CRITICAL --format json -o security-reports/trivy-report.json ./  

      - name: Run OWASP Dependency-Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'MyProject'
          path: './'  # Path to your project folder
          format: 'HTML,JSON'
          out: 'security-reports'  # Save OWASP reports inside the security-reports folder
          args: >
            --failOnCVSS 7
            --enableRetired        

      - name: Upload security reports
        uses: actions/upload-artifact@v4
        with:
          name: Security-Reports
          path: security-reports/
      
      - name: Grant execute permission for Gradle wrapper
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build
        env:
          VITE_DATADOG_APPLICATION_ID: ${{ secrets.VITE_DATADOG_APPLICATION_ID }}
          VITE_DATADOG_CLIENT_TOKEN: ${{ secrets.VITE_DATADOG_CLIENT_TOKEN }}
          VITE_DATADOG_LOGS_CLIENT_TOKEN: ${{ secrets.VITE_DATADOG_LOGS_CLIENT_TOKEN }}

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: production-files
          path: dist/

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Required for GitHub Pages deployment

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: production-files
          path: dist/

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: dist
